; ModuleID = 'bubbleSort.c'
source_filename = "bubbleSort.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str = private unnamed_addr constant [15 x i8] c"Sorted array: \00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"%d \00", align 1

; Function Attrs: nofree norecurse nosync nounwind sspstrong memory(argmem: readwrite) uwtable
define dso_local void @bubbleSort(ptr nocapture noundef %0, i32 noundef %1) local_unnamed_addr #0 {
  %3 = add i32 %1, -1
  %4 = icmp sgt i32 %1, 1
  br i1 %4, label %5, label %19

5:                                                ; preds = %2
  %6 = getelementptr i32, ptr %0, i64 1
  br label %7

7:                                                ; preds = %5, %30
  %8 = phi i32 [ %32, %30 ], [ %3, %5 ]
  %9 = phi i32 [ %31, %30 ], [ 0, %5 ]
  %10 = zext i32 %8 to i64
  %11 = sub nsw i32 %9, %1
  %12 = icmp slt i32 %11, -1
  br i1 %12, label %13, label %30

13:                                               ; preds = %7
  %14 = load i32, ptr %0, align 4, !tbaa !5
  %15 = and i64 %10, 1
  %16 = icmp eq i32 %8, 1
  br i1 %16, label %20, label %17

17:                                               ; preds = %13
  %18 = and i64 %10, 4294967294
  br label %34

19:                                               ; preds = %30, %2
  ret void

20:                                               ; preds = %52, %13
  %21 = phi i32 [ %14, %13 ], [ %53, %52 ]
  %22 = phi i64 [ 0, %13 ], [ %46, %52 ]
  %23 = icmp eq i64 %15, 0
  br i1 %23, label %30, label %24

24:                                               ; preds = %20
  %25 = getelementptr i32, ptr %6, i64 %22
  %26 = load i32, ptr %25, align 4, !tbaa !5
  %27 = icmp sgt i32 %21, %26
  br i1 %27, label %28, label %30

28:                                               ; preds = %24
  %29 = getelementptr inbounds i32, ptr %0, i64 %22
  store i32 %26, ptr %29, align 4, !tbaa !5
  store i32 %21, ptr %25, align 4, !tbaa !5
  br label %30

30:                                               ; preds = %20, %28, %24, %7
  %31 = add nuw nsw i32 %9, 1
  %32 = add i32 %8, -1
  %33 = icmp eq i32 %31, %3
  br i1 %33, label %19, label %7, !llvm.loop !9

34:                                               ; preds = %52, %17
  %35 = phi i32 [ %14, %17 ], [ %53, %52 ]
  %36 = phi i64 [ 0, %17 ], [ %46, %52 ]
  %37 = phi i64 [ 0, %17 ], [ %54, %52 ]
  %38 = or disjoint i64 %36, 1
  %39 = getelementptr inbounds i32, ptr %0, i64 %38
  %40 = load i32, ptr %39, align 4, !tbaa !5
  %41 = icmp sgt i32 %35, %40
  br i1 %41, label %42, label %44

42:                                               ; preds = %34
  %43 = getelementptr inbounds i32, ptr %0, i64 %36
  store i32 %40, ptr %43, align 4, !tbaa !5
  store i32 %35, ptr %39, align 4, !tbaa !5
  br label %44

44:                                               ; preds = %34, %42
  %45 = phi i32 [ %40, %34 ], [ %35, %42 ]
  %46 = add nuw nsw i64 %36, 2
  %47 = getelementptr inbounds i32, ptr %0, i64 %46
  %48 = load i32, ptr %47, align 4, !tbaa !5
  %49 = icmp sgt i32 %45, %48
  br i1 %49, label %50, label %52

50:                                               ; preds = %44
  %51 = getelementptr inbounds i32, ptr %0, i64 %38
  store i32 %48, ptr %51, align 4, !tbaa !5
  store i32 %45, ptr %47, align 4, !tbaa !5
  br label %52

52:                                               ; preds = %50, %44
  %53 = phi i32 [ %48, %44 ], [ %45, %50 ]
  %54 = add i64 %37, 2
  %55 = icmp eq i64 %54, %18
  br i1 %55, label %20, label %34, !llvm.loop !11
}

; Function Attrs: nofree nounwind sspstrong uwtable
define dso_local noundef i32 @main() local_unnamed_addr #1 {
  %1 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str)
  %2 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.1, i32 noundef 11)
  %3 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.1, i32 noundef 12)
  %4 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.1, i32 noundef 22)
  %5 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.1, i32 noundef 25)
  %6 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.1, i32 noundef 34)
  %7 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.1, i32 noundef 64)
  %8 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.1, i32 noundef 90)
  %9 = tail call i32 @putchar(i32 10)
  ret i32 0
}

; Function Attrs: nofree nounwind
declare noundef i32 @printf(ptr nocapture noundef readonly, ...) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare noundef i32 @putchar(i32 noundef) local_unnamed_addr #3

attributes #0 = { nofree norecurse nosync nounwind sspstrong memory(argmem: readwrite) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nofree nounwind sspstrong uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { nofree nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { nofree nounwind }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 2}
!4 = !{!"clang version 18.1.8"}
!5 = !{!6, !6, i64 0}
!6 = !{!"int", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C/C++ TBAA"}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.mustprogress"}
!11 = distinct !{!11, !10}
